# Jupyter notebook container for interactive development
ARG PYTHON_VERSION=3.11
FROM python:${PYTHON_VERSION}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    # .NET runtime for PythonNET
    apt-transport-https \
    software-properties-common \
    # Jupyter dependencies
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# Install .NET Runtime
RUN wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && rm packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y dotnet-runtime-6.0 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy project files
COPY pyproject.toml ./
COPY README.md ./

# Install project dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -e .

# Install Jupyter and extensions
RUN pip install --no-cache-dir \
    jupyter \
    jupyterlab>=3.0 \
    notebook \
    ipywidgets \
    jupyterlab-git \
    jupyterlab-lsp \
    python-lsp-server[all] \
    matplotlib \
    seaborn \
    plotly \
    pandas \
    numpy

# Install JupyterLab extensions
RUN jupyter labextension install @jupyter-widgets/jupyterlab-manager

# Create Jupyter config
RUN jupyter notebook --generate-config

# Set environment variables
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

# Create directories
RUN mkdir -p /app/notebooks /app/data /app/logs

# Copy example notebooks if they exist
COPY notebooks/* /app/notebooks/ 2>/dev/null || true

# Expose Jupyter port
EXPOSE 8888

# Default command
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]